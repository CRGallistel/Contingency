% TSLIMIT   Limit the range of subjects, sessions, phases, or trials.%   Currently, limiting by date is not supported.%%   TSLIMIT(fieldname,INDEX-SPECIFICATION) sets limits on the range that%    will be used for   statistics computations.  fieldname must be either% 'Subjects', 'Sessions', 'Phases', or 'Trials'.%%	See also TSNOLIMIT, TSFIRST, TSend, TSAPPLYSTAT%% By default, the TSlib functions TStrialstat, TSsessionstat, TSapplystat% and TScombineover operate on all available data in the Experiment structure.% TSlimit places restrictions on which subjects, sessions, phases or trials% are considered by these functions. Calling TSlimit('all') removes all% restrictions on all fields.%% When calling TSlimit to make restrictions, the fieldname argument specifies% the name of the field on which to base the limit (either 'Subjects',% 'Sessions', Phases', or 'Trials'). The second argument (elements) specifies% the elements of a given basis to which the operations of other commands% will be restricted for as long as the limit is operative (that is, until% another TSlimit command overrides the restriction%% Limiting Subjects, Sessions and Trials% Subjects, sessions, and trials are all indexed from 1 to n. The TSlimit% function in these cases determines the indices that will be used when% creating statistics. For subjects, the number n is the total number of% subjects in the experiment. For sessions, the number n is the total number% of sessions given a particular subject under consideration. For trials,% the number n is the total number of trials given a particular subject and% a particular session under consideration.%% If elements is 'all', then all elements 1-n will be used in the given% fieldname. For example, TSlimit('Trials','all') will use all trials in analysis.% The range can be a single number. In this case, data analysis will be% restricted to a single subject, session, or trial. The number can be either % a positive integer, a negative integer, a real between 0 and 1, or Inf.% If the number is a positive integer, then the index used is simply this% number. For example, TSlimit('Sessions',2) will only use the second% session of subjects for analysis.%% If the entry is Inf (NB, not 'Inf', that is, do not enclose Inf in single% quotes), then TSgetlimit returns only the last trial or session or% subject, etc. If value >=1, it returns that% value (which should be an integer). If it's between 0 and 1, it returns% the integer that falls closest to that percent. Thus, if there are 11% sessions and the number is .5, it will return 6 (rounded up from .5 x 11% = 5.5.%% If the number is a negative integer, then the index used is found by% counting backwards from the number n.  So, -1 would refer to the last% index, -2 to the second to last, etc. For example, if Subject 1 had 7% sessions and Subject 2 had 10 sessions, then using TSlimit('Sessions',-2)% will use only session 6 for subject 1 and session 9 for subject 2.%% If the number is a real between 0 and 1, then it is treated as a percentage.% Thus, if it is .5, it specifies the first half of the subjects or% sessions or trials; if it is -.5, it specifies the 2nd half; if it is% -.33, it specifies the last third. This is primarily of use in specifying% a range of trials to be analyzed (and perhaps, in some circumstances,% sessions); it would rarely make much sense when used with Subjects%% If the number is Inf, then the array index is simply n, the last entry% (this is equivalent to using -1).%%% In addition to being a single number, the range can be an array of numbers,% the result being all the indices computed as above for a single number.% For  example, if there were 20 subjects, then TSlimit('Subjects',% [7,Inf,.7,-3]) would limit the subjects for analysis to subject 7% (from 7), 14 (from .7) 18 (from -3), and 20 (from Inf).% The range can also be a cell array that consists of numbers and arrays of% number pairs. Just like in the single array case, each number in the cell% array determines an index, and these indices determine which elements to% use. If an array of two numbers is included in the cell array, then the% indices included are the range between the two computed indices. For% example, again assuming 20 subjects, TSlimit({.7 7 Inf [2 5] [.5 .6]})% would restrict analysis to subjects [2 3 4 5 7 11 12 14 20]. 2,3,4, and 5% come from [2 5], 7 comes from 7, 11 and 12 come from [.5 .6] , 14 comes% from .7, and 20 comes from Inf.%%% Limiting Subjects% Note that when limiting the subjects,  the numbers 1:n are used to refer% to the index of the subjects (based on their entry order) and not their ID% numbers. Alternatively, one can limit the subjects by referring to their% ID number. In this case, the range must be a cell array with the first% cell an array of Subject IDs (or a single ID), and the second cell% containing the character 'a', to indicate absolute mode.% Example: TSlimit('Subjects',{[304 309 412],'a'});Use subjects with IDs% 304, 309, and 412.% % Limiting Phases% Limiting phases works in the same way that the limiting the subjects does% when using the 'all' . That is, the phases numbers are treated nominally.% For phases, the range one either be a single phase number or an array of% phase numbers. Negative numbers, negative numbers, Inf, and cell arrays% should not be used. One can also use TSlimit('Phases', 'all') to use all% phases.%%	See also TSNOLIMIT, TSFIRST, TSend, TSAPPLYSTAT%% Updated: 8/19/2009 by Chris Kourtevfunction TSlimit(fieldname,limit)if evalin('base','isempty(who(''global'',''Experiment''))') % Verify that an Experiment structure exists    error('There is no experiment structure defined.');endglobal Experiment;if ~ischar(fieldname) || ~ismember(fieldname,{'Subjects' 'Sessions' 'Phases' 'Trials' 'all'})    % The first argument must be a string of the given types    error('The First argument must be the string ''Subjects'', ''Sessions'', ''Phases'', or ''Trials''')endif strcmp(fieldname,'all')                         % This resets the limits so that all elements are used    Experiment.Info.ActiveSubjects = 'all';    Experiment.Info.ActiveSessions = 'all';    Experiment.Info.ActivePhases =   'all';    Experiment.Info.ActiveTrials =   'all';    Experiment.Info.ActiveDates =    'all';     % Not currently usedelse    if ischar(limit) && ~strcmp('all',limit)        display(char({'Limits must be either scalars, numeric vectors or "all"';...            'Converting text numbers to numeric'}))        limit = str2num(limit);        if isempty(limit)            disp('Error: Attempt to convert string argument to numeric vector failed')            return        end    end    Experiment.Info.(['Active' fieldname]) = limit;end%%% if strcmp(fieldname,'Sessions')  % sessions%     Experiment.Info.ActiveSessions = TSgetlimit(Experiment.InfoTSgetlimit(Experiment.Info.ActiveSubjects,Experiment.NumSubjects);  % Call TSgetlimit to assure syntax was correctend            