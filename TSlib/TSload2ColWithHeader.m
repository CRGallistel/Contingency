function [ SUCCESS , ExperimentID, SubjectID, Phase, Box, MatlabStartDate,...    Duration, TSdata, Notes, Weight, Program, FileReportedUnits ]...    = TSload2ColWithHeader (filename,delimiter)%% Syntax:  [ SUCCESS , ExperimentID, SubjectID, Phase, Box, MatlabStartDate,...%     Duration, TSdata, Notes, Weight, Program, FileReportedUnits ]...%     = TSload2ColWithHeader(filename,delimiter)% Assumptions:%   File is a 2-column text file readable by Matlab's dlmread command%   Initial rows give header information with the number in the 2nd column%   indicating what that information is, in accord with the following code%   Month,      1%   Date,       2%   Year,       3%   Hours,      4%   Minutes,    5%   Seconds,    6%   Experiment, 7%   Subject,    8%   Phase,      9%   Box,        10%   TimeUnit,   11%   Weight,     12%   0,          0%   ... (tsdata)...%   ...         ...%   ...         ...%%   Only Subject and date are really required. Other things are not%   strictly required but are good to have. TimeUnit is strictly optional, and%   represents the unit the time stamps are measured in, using%   seconds e.g. if your unit is 50ths of a seconds, this field should be%   .02. If this field is not provided the load parameters will be used. If%   this field does not match the load parameters setting, a warning will%   be passed and the data file will override the load parameters setting.%%   Weight is strictly optional and if your apparatus does not take note of%   this, you are encouraged to use the TSexperimentbrowser to enter this%   data at the end of the Experiment.%   %   The column-delimiter character is assumed to be one of the common ones%   recognizable as such by Matlab's dlmread command (white space, comma,%   tab). If an unusual delimiter is used, it may be specified by adding it%   as a 2nd argument in the call to this function (e.g.,%    TSload2ColWithHeader(filename,':')SUCCESS = 0;if nargin < 2 % no column-delimiter characters specified in the call  raw = dlmread(filename);else % deliminter specified    raw = dlmread(filename,delimiter);endseperator = find(raw(:,2) == 0, 1, 'first'); % first row with a 0 in the% 2nd column separates the header rows from the time-stamped data rowsmonth = [];date = [];year = [];hours = [];minutes = [];seconds = [];ExperimentID = [];SubjectID = [];Phase = [];Box = [];FileReportedUnit = [];Notes = '';Weight = [];Program = '';FileReportedUnits = [];Duration = [];TSdata = [];x = 1;while x < seperator    switch raw(x,2)        case 1            month = raw(x,1);        case 2            date = raw(x,1);                    case 3            year = raw(x,1);                    case 4            hours = raw(x,1);        case 5            minutes = raw(x,1);        case 6            seconds = raw(x,1);        case 7            ExperimentID = raw(x,1);        case 8            SubjectID = raw(x,1);        case 9            Phase = raw(x,1);        case 10            Box = raw(x,1);        case 11            FileReportedUnit = raw(x,1);        case 12            Weight = raw(x,1);    end    x = x + 1;endif isempty(month)    warning('TSload:NoMonth', 'This sesssion data file %s did not provide the month of the session.', filename);endif isempty(date)    warning('TSload:NoDate', 'This sesssion data file %s did not provide the date of the session.', filename);endif isempty(year)    warning('TSload:NoYear', 'This sesssion data file %s did not provide the year of the session.', filename);endif isempty(hours)    warning('TSload:NoHour', 'This sesssion data file %s did not provide the hour of the session.', filename);    hours = 12;endif isempty(minutes)    warning('TSload:NoMinute', 'This sesssion data file %s did not provide the minutes of the session.', filename);    minutes = 0;endif isempty(seconds)    seconds = 0;endMatlabStartDate = datenum(year, month, date, hours, minutes, seconds);TSdata = raw(seperator+1:end, :);TSdata = sortrows(TSdata, 1);TSdata(all((TSdata == circshift(TSdata, 1))'),:) = [];SUCCESS = 1;